name: GSI-Workshop2

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load Configuration
        uses: falti/dotenv-action@v0.2.7
        id: config
        with:
          path: config2.env
      - name: Check Configuration
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ steps.config.outputs.tool_repo }}" "TOOL_REPO config"
          required "${{ steps.config.outputs.url }}" "URL config"
          required "${{ steps.config.outputs.firmware_type }}" "FIRMWARE_TYPE config"
          required "${{ steps.config.outputs.repack_name }}" "REPACK_NAME config"
          required "${{ steps.config.outputs.mir }}" "MIR config"

      - name: Initialization environment
        run: |
            sudo -E apt-get -qq install git wget
       
      - name: Setup ErfanGSIs Tools
        run: |
          git clone --recurse-submodules "${{ steps.config.outputs.tool_repo }}" ErfanGSIs
          sudo bash ErfanGSIs/setup.sh
          sed -i '$d' ErfanGSIs/url2GSI.sh

      - name: Build AB & AOnly
        if: ${{ steps.config.outputs.output_type == 'all' }}
        run: |
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" "${{ steps.config.outputs.extra_args }}"
      - name: Build AB
        if: ${{ steps.config.outputs.output_type == 'ab' }}
        run: |
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" --ab ${{ steps.config.outputs.extra_args }}
      - name: Build AOnly
        if: ${{ steps.config.outputs.output_type == 'a' }}
        run: |
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" --aonly ${{ steps.config.outputs.extra_args }}

      - name: Repack AB,AOnly and upload
        if: ${{ steps.config.outputs.output_type == 'all' }}
        run: |
              mkdir final
              sudo chmod -R 777 ErfanGSIs/output
              zip -r ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-Aonly.7z ErfanGSIs/output/*-Aonly-*.img
              zip -r ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-AB.7z ErfanGSIs/output/*-AB-*.img
              curl -sL https://git.io/file-transfer | sh
              ./transfer "${{ steps.config.outputs.mir }}" ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-Aonly.7z
              ./transfer "${{ steps.config.outputs.mir }}" ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-AB.7z
                   
      - name: Repack Aonly and upload
        if: ${{ steps.config.outputs.output_type == 'a' }} 
        run: |
              mkdir final
              sudo chmod -R 777 ErfanGSIs/output
              zip -r ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-Aonly.7z ErfanGSIs/output/*-Aonly-*.img *
              touch dl.txt
              curl -sL https://git.io/file-transfer | sh 
              ./transfer "${{ steps.config.outputs.mir }}" ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-Aonly.7z | gprep Download >> dl.txt        
      - name: Repack AB and upload
        if: ${{ steps.config.outputs.output_type == 'ab' }} 
        run: |
              zip -r ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-AB.7z ErfanGSIs/output/*-AB-*.img
              ./transfer "${{ steps.config.outputs.mir }}" ErfanGSIs/output/"${{ steps.config.outputs.repack_name }}"-GSI-AB.7z      
      - name: Print Build Info & Download Link
        run: |
              cat ErfanGSIs/output/*-Aonly-*.txt
              cat final/input/dl.txt
